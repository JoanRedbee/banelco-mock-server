{"version":3,"sources":["../lib/config.js"],"names":["env","defaults","appName","appVersion","defaultLocale","isProduction","process","NODE_ENV","isLogEnabled","LOGGING","locales","port","PORT","get"],"mappings":";;;;;;AACA;;;;;;AACA;;AAEA;AACA;AACA,gBAAMA,GAAN,CAAU,IAAV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAjBA;AAkBA,gBAAMC,QAAN,CAAe;AACbC,WAAS,kBADI;AAEbC,cAAY,CAFC;AAGbC,iBAAe,IAHF;AAIbC,gBAAcC,QAAQN,GAAR,CAAYO,QAAZ,KAAyB,YAJ1B;AAKbC,gBAAcF,QAAQN,GAAR,CAAYS,OAAZ,KAAwB,IALzB;AAMbC,WAAS,CAAC,IAAD,EAAO,IAAP,CANI;AAObC,QAAML,QAAQN,GAAR,CAAYY,IAAZ,IAAoB;AAPb,CAAf;;kBAUe,gBAAMC,GAAN,E","file":"config.js","sourcesContent":["// http://www.codedependant.net/2015/01/31/production-ready-node-configuration\nimport nconf from 'nconf';\n// import { execSync } from 'child_process';\n\n// Specifying an env delimiter allows us to override config when shipping to\n// production server. 'foo__bar=2 gulp' will set config to '{foo: {bar: 2}}'\nnconf.env('__');\n\n// For local development with secrets. Check src/common/_secrets.json file.\n// nconf.file('src/common/secrets.json');\n\n// // The semver is for libraries, apps are versioned by git commit SHA.\n// const sourceVersion = process.env.SOURCE_VERSION || execSync('git rev-parse HEAD')\n//   .toString()\n//   .trim();\n\n// Remember, never put secrets in default config.\n// Use environment variables for production, and secrets.json for development.\nnconf.defaults({\n  appName: 'node mock server',\n  appVersion: 1,\n  defaultLocale: 'en',\n  isProduction: process.env.NODE_ENV === 'production',\n  isLogEnabled: process.env.LOGGING === 'ON',\n  locales: ['cs', 'en'],\n  port: process.env.PORT || 8080\n});\n\nexport default nconf.get();\n"]}