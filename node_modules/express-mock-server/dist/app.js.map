{"version":3,"sources":["../lib/app.js"],"names":["isLogEnabled","App","constructor","sources","serverConfig","parser","apiUrl","getApiUrl","app","console","log","yellow","initMiddleware","initControlApi","initMocks","use","json","initLogger","router","registerSources","controlApiUrl","start","port","callback","listen"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAM,EAAEA,YAAF,qBAAN;;AAEO,MAAMC,GAAN,CAAU;AACfC,cAAYC,OAAZ,EAAqBC,YAArB,EAAmC;AACjC,SAAKC,MAAL,GAAc,iCAAkBF,OAAlB,CAAd;AACA,SAAKG,MAAL,GAAc,KAAKC,SAAL,CAAeH,YAAf,CAAd;AACA,SAAKI,GAAL,GAAW,wBAAX;;AAEAC,YAAQC,GAAR,CAAY,4BAA4BC,MAAxC;;AAEA,SAAKC,cAAL;AACA,SAAKC,cAAL;AACA,SAAKC,SAAL;AACD;;AAEDF,mBAAiB;AACf,SAAKJ,GAAL,CAASO,GAAT,CAAa,qBAAWC,IAAX,EAAb;AACA,SAAKR,GAAL,CAASO,GAAT,CAAa,8BAAY,KAAKT,MAAjB,CAAb;AACA,SAAKW,UAAL;AACD;;AAEDH,cAAY;AACV,UAAMI,SAAS,iCAAkB,KAAKb,MAAvB,CAAf;AACAa,WAAOC,eAAP,CAAuB,KAAKX,GAA5B,EAAiCR,YAAjC;AACD;;AAED;;;;;;;AAOAiB,eAAa;AACX,QAAIjB,YAAJ,EAAkB;AAChB,WAAKQ,GAAL,CAASO,GAAT,CAAa,sBAAO,wCAAP,CAAb;AACD;AACF;;AAEDF,mBAAiB;AACf,SAAKL,GAAL,CAASO,GAAT,CAAa,KAAKT,MAAlB,EAA0B,yBAAW,KAAKD,MAAhB,CAA1B;AACA,SAAKG,GAAL,CAASO,GAAT,CAAa,KAAKT,MAAlB,EAA0B,8BAA1B;AACD;;AAEDC,YAAU,EAAEa,aAAF,KAAoB,EAA9B,EAAkC;AAChC,WAAOA,gBAAgBA,aAAhB,GAAgC,SAAvC;AACD;;AAEDC,QAAMC,IAAN,EAAYC,QAAZ,EAAsB;AACpB,WAAO,KAAKf,GAAL,CAASgB,MAAT,CAAgBF,IAAhB,EAAsBC,QAAtB,CAAP;AACD;AAhDc;QAAJtB,G,GAAAA,G","file":"app.js","sourcesContent":["import express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport config from './config';\nimport { controlApi } from './api/control';\nimport { SourcesParser } from './core/sources-parser';\nimport { SourcesRouter } from './core/sources-router';\nimport { recordingApi } from './api/recording';\nimport { apiRecorder } from './api/recording/api-recorder';\n\nconst { isLogEnabled } = config;\n\nexport class App {\n  constructor(sources, serverConfig) {\n    this.parser = new SourcesParser(sources);\n    this.apiUrl = this.getApiUrl(serverConfig);\n    this.app = express();\n\n    console.log('******* CONFIG **********'.yellow);\n\n    this.initMiddleware();\n    this.initControlApi();\n    this.initMocks();\n  }\n\n  initMiddleware() {\n    this.app.use(bodyParser.json());\n    this.app.use(apiRecorder(this.apiUrl));\n    this.initLogger();\n  }\n\n  initMocks() {\n    const router = new SourcesRouter(this.parser);\n    router.registerSources(this.app, isLogEnabled);\n  }\n\n  /**\n   *  Method to start logger of requests\n   *    Actual format\n   *      0.230 ms GET 200 /some/url/\n   *    More option\n   *      https://github.com/expressjs/morgan\n   */\n  initLogger() {\n    if (isLogEnabled) {\n      this.app.use(morgan(':response-time ms :method :status :url'));\n    }\n  }\n\n  initControlApi() {\n    this.app.use(this.apiUrl, controlApi(this.parser));\n    this.app.use(this.apiUrl, recordingApi());\n  }\n\n  getApiUrl({ controlApiUrl } = {}) {\n    return controlApiUrl ? controlApiUrl : '/api/v1';\n  }\n\n  start(port, callback) {\n    return this.app.listen(port, callback);\n  }\n}\n"]}