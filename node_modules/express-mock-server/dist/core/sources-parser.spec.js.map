{"version":3,"sources":["../../lib/core/sources-parser.spec.js"],"names":["describe","it","sources","request","method","path","response","statusCode","body","JSON","stringify","key","parser","equal","Object","keys","map","length"],"mappings":";;AAAA;;AACA;;;;;;AAEAA,SAAS,eAAT,EAA0B,MAAM;AAC9BC,KAAG,qBAAH,EAA0B,MAAM;AAC9B;AACA,UAAMC,UAAU,CACd,CACE;AACEC,eAAS;AACPC,gBAAQ,KADD;AAEPC,cAAM;AAFC,OADX;AAKEC,gBAAU;AACRC,oBAAY,GADJ;AAERC,cAAMC,KAAKC,SAAL,CAAe;AACnBC,eAAK;AADc,SAAf;AAFE;AALZ,KADF,CADc,CAAhB;;AAiBA;AACA,UAAMC,SAAS,iCAAkBV,OAAlB,CAAf;;AAEA;AACA,qBAAOW,KAAP,CAAaC,OAAOC,IAAP,CAAYH,OAAOI,GAAnB,EAAwBC,MAArC,EAA6C,CAA7C;AACA,qBAAOJ,KAAP,CAAaC,OAAOC,IAAP,CAAYH,OAAOI,GAAnB,EAAwB,CAAxB,CAAb,EAAyC,WAAzC;AACD,GAzBD;AA0BD,CA3BD","file":"sources-parser.spec.js","sourcesContent":["import { SourcesParser } from './sources-parser';\nimport assert from 'assert';\n\ndescribe('source-parser', () => {\n  it('should parse source', () => {\n    // given\n    const sources = [\n      [\n        {\n          request: {\n            method: 'GET',\n            path: '/api/test'\n          },\n          response: {\n            statusCode: 200,\n            body: JSON.stringify({\n              key: 'value'\n            })\n          }\n        }\n      ]\n    ];\n\n    // when\n    const parser = new SourcesParser(sources);\n\n    // then\n    assert.equal(Object.keys(parser.map).length, 1);\n    assert.equal(Object.keys(parser.map)[0], '/api/test');\n  });\n});\n"]}