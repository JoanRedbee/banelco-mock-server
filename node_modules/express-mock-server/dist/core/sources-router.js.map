{"version":3,"sources":["../../lib/core/sources-router.js"],"names":["SourcesRouter","constructor","parser","registerSources","app","isLogEnabled","map","getMap","Object","keys","forEach","path","registerGET","registerPOST","registerPUT","registerDELETE","registerPATCH","pathItem","gets","GET","get","req","res","logRegisteredPath","posts","POST","post","puts","PUT","put","deletes","DELETE","delete","patches","PATCH","patch","method","console","log","magenta"],"mappings":"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","file":"sources-router.js","sourcesContent":["import { methods } from '../constants';\nimport { requestHandler } from './request-handler';\n\nexport class SourcesRouter {\n  /**\n   * @param {SourcesParser} parser\n   */\n  constructor(parser) {\n    this.parser = parser;\n  }\n\n  registerSources(app, isLogEnabled) {\n    const map = this.parser.getMap();\n    Object.keys(map).forEach(path => {\n      this.registerGET(app, path, isLogEnabled);\n      this.registerPOST(app, path, isLogEnabled);\n      this.registerPUT(app, path, isLogEnabled);\n      this.registerDELETE(app, path, isLogEnabled);\n      this.registerPATCH(app, path, isLogEnabled);\n    });\n  }\n\n  registerGET(app, path, map, isLogEnabled) {\n    const pathItem = this.parser.getMap()[path];\n    const gets = pathItem[methods.GET];\n\n    if (gets) {\n      gets.forEach(() => {\n        app.get(path, (req, res) => {\n          requestHandler(this.parser, req, res);\n        });\n        this.logRegisteredPath(isLogEnabled, methods.GET, path);\n      });\n    }\n  }\n\n  registerPOST(app, path, map, isLogEnabled) {\n    const pathItem = this.parser.getMap()[path];\n    const posts = pathItem[methods.POST];\n    if (posts) {\n      posts.forEach(() => {\n        app.post(path, (req, res) => {\n          requestHandler(this.parser, req, res);\n        });\n        this.logRegisteredPath(isLogEnabled, methods.POST, path);\n      });\n    }\n  }\n\n  registerPUT(app, path, map, isLogEnabled) {\n    const pathItem = this.parser.getMap()[path];\n    const puts = pathItem[methods.PUT];\n    if (puts) {\n      puts.forEach(() => {\n        app.put(path, (req, res) => {\n          requestHandler(this.parser, req, res);\n        });\n        this.logRegisteredPath(isLogEnabled, methods.PUT, path);\n      });\n    }\n  }\n\n  registerDELETE(app, path, map, isLogEnabled) {\n    const pathItem = this.parser.getMap()[path];\n    const deletes = pathItem[methods.DELETE];\n    if (deletes) {\n      deletes.forEach(() => {\n        app.delete(path, (req, res) => {\n          requestHandler(this.parser, req, res);\n        });\n        this.logRegisteredPath(isLogEnabled, methods.DELETE, path);\n      });\n    }\n  }\n\n  registerPATCH(app, path, map, isLogEnabled) {\n    const pathItem = this.parser.getMap()[path];\n    const patches = pathItem[methods.PATCH];\n    if (patches) {\n      patches.forEach(() => {\n        app.patch(path, (req, res) => {\n          requestHandler(this.parser, req, res);\n        });\n        this.logRegisteredPath(isLogEnabled, methods.PATCH, path);\n      });\n    }\n  }\n\n  /**\n   *  Method to log registred path\n   */\n  logRegisteredPath(isLogEnabled, method, path) {\n    if (isLogEnabled) {\n      console.log(`REG ${method} ${path}`.magenta);\n    }\n  }\n}\n"]}