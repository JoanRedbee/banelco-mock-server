{"version":3,"sources":["../../../lib/api/recording/index.js"],"names":["router","Router","recordingApi","post","req","res","uuid","send","id","recording","params","status"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA,MAAMA,SAAS,kBAAQC,MAAR,CAAe,EAAf,CAAf;;AAEO,MAAMC,sCAAe,MAAM;AAChCF,SAAOG,IAAP,CAAY,kBAAZ,EAAgC,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5C,UAAMC,OAAO,qCAAb;AACAD,QAAIE,IAAJ,CAAS;AACPC,UAAIF;AADG,KAAT;AAGD,GALD;;AAOAN,SAAOG,IAAP,CAAY,qBAAZ,EAAmC,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/C,UAAMI,YAAY,gCAAcL,IAAIM,MAAJ,CAAWF,EAAzB,CAAlB;AACA,QAAI,CAACC,SAAL,EAAgB;AACdJ,UAAIM,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB,6CAArB;AACD;AACDF,QAAIE,IAAJ,CAASE,SAAT;AACD,GAND;;AAQA,SAAOT,MAAP;AACD,CAjBM","file":"index.js","sourcesContent":["import express from 'express';\nimport { startNewRecording, stopRecording } from './api-recorder';\n\nconst router = express.Router({});\n\nexport const recordingApi = () => {\n  router.post('/recording/start', (req, res) => {\n    const uuid = startNewRecording();\n    res.send({\n      id: uuid\n    });\n  });\n\n  router.post('/recording/:id/stop', (req, res) => {\n    const recording = stopRecording(req.params.id);\n    if (!recording) {\n      res.status(404).send('The monitoring with given ID was not found.');\n    }\n    res.send(recording);\n  });\n\n  return router;\n};\n"]}